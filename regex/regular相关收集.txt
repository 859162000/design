正则表达式相关收集


1，替换所有<? vvvv ?>形式xml头一行:
	paramValueFile = paramValueFile.replaceAll("<\\?(.*?)\\?>", "");
	Pattern pattern=Pattern.compile("<message>(.*?)</message>");

2，日期与数字：
	2.1 date	String dateValid = "^\\d{4}-\d{2}-\d{2}$" 
	2.2 number	Pattern pattern = Pattern.compile("[0-9]*");
				n位的数字	^\\d{n}$
				
	2.3 复杂版	^\\d{4}((0([1-9]{1}))|(1[1|2]))(([0-2]([1-9]{1}))|(3[0|1]))([0-1][0-9]|2[0-3])([0-5][0-9])([0-5][0-9])$

3，括号嵌套
	String line = "null[null[请求服务异常]]";
	String pattern = "\\[([^\\[\\]]+)\\]";
	Pattern r = Pattern.compile(pattern);
	Matcher m = r.matcher(line);
	if (m.find()) {
		 System.out.println(m.group(0));
		 System.out.println(m.group(1));
	}
				
4，匹配任意xml节点
	String patthern = "(.*?)<ChgUser>(.*?)<OprSeq>(.*?)";
	String test = "vvvv<ChgUser>vv f vvv<OprSeq>vvvv";

5，{n,m}次数匹配
	?		0次或1次	{0,1}
	+		1次或多次	{1,}
	*		0次或多次	{0,}
	{n,m}	n次到m次	{n,m}
6，简洁写法
	.	除换行之外的任何单个字符
	\n	换行
	
	6.1	数字
	\d		[0-9]	数字字符
	\D		[^0-9]	非数字字符
	[\d\D]			所有字符
	
	6.2 单词
	\w		类似[A-Za-z0-9_]	任何单词字符
	\W		[^A-Za-z0-9_]		非单词字符
	
	\s		[\f\n\r\t\v]		任何不可见字符：空格，制表符，换页
	\S		[^\f\n\r\t\v]		任何可见字符

7，文件名匹配 "BOSS2PBSS_UserStatusSync_\\d{3}_\\d{14}_\\d{4}.dat"

8，^表示字符串开头，$表示字符串结尾
	8.1 |表示或
